variables:
  DEV_USER: student
  DEV_HOST: std-019-32.praktikum-services.tech
  #VERSION: 1.0.${CI_PIPELINE_ID}
  SAST_EXCLUDED_ANALYZERS: "spotbugs,gosec-sast"
include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
  - template: 'Security/SAST.gitlab-ci.yml'  


stages:
   - verify
   - test 
   - build
   - release
   - notify
   

build:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - docker build --tag $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA

sonarqube-sast:
  stage: verify
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  script:
    - cd frontend
    - > 
      sonar-scanner
      -Dsonar.sources=. 
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONT}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_FRONT}
      -Dsonar.projectName=ALEXANDERVOZNYY_MOMO_STORE_FRONT
      -Dsonar.qualitygate.wait=false


build:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - docker build --build-arg VUE_APP_API_URL=/api --tag $CI_REGISTRY_IMAGE/momostore-frontend:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE/momostore-frontend:$CI_COMMIT_SHA

upload-latest:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/momostore-frontend:$CI_COMMIT_SHA
    # если образ прошел проверки в CI (сканирование, тесты и т.д), то тегаем latest
    - docker tag $CI_REGISTRY_IMAGE/momostore-frontend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/momostore-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/momostore-frontend:latest
         
telegram-notification:
  stage: notify
  when: manual
  script:
    - 'curl -X POST -H "Content-type: application/json" --data "{\"chat_id\": \"-1001634310929\", \"text\": \"Вышла новая версия momostore-frontend пельменной — ${VERSION}. Скачать momostore-frontend можно по команде docker pull — ${CI_REGISTRY_IMAGE}/momostore-frontend:latest\"}" "https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage"'
  needs:
    - job: upload-latest




