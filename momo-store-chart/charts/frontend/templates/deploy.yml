apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: frontend 
  labels: 
    app: frontend
    pp.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec: 
  replicas: 1
  revisionHistoryLimit: 15
  strategy: 
    type: Recreate 
  selector: 
    matchLabels: 
      app: frontend 
      commit: latest 
  template: 
    metadata: 
      labels: 
        app: frontend 
        commit: latest 
    spec: 
      containers: 
        - image: "{{ .Values.image }}"
          name: frontend 
          imagePullPolicy: Always
          volumeMounts: 
            - name: frontend 
              mountPath: /etc/nginx/nginx.conf 
              subPath: nginx.conf 
              readOnly: false 
          ports: 
            - name: frontend 
              containerPort: 80 
          livenessProbe: 
            httpGet: 
              port: 80 
            initialDelaySeconds: 30 
            periodSeconds: 30 
            timeoutSeconds: 2 
            failureThreshold: 6 
      volumes: 
        - name: frontend 
          configMap: 
            name: frontend 
            items: 
              - key: nginx.conf 
                path: nginx.conf 
      imagePullSecrets: 
        - name: docker-config-secret
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                # предпочтение по развертыванию в определенной зоне             
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - frontend 
